--Scroll down to see new queries.
LINK: https://www.db-fiddle.com/f/wvxxNRvt3xZRzeqDnSi5gy/1

-- Step 1. Let's see what this table looks like!

SELECT *
FROM modules;

--  Step 2. Let’s add a new column called "modules_remaining" which equals the modules_completed subtracted from modules_assigned. Run the following query.

SELECT *
, modules_assigned - modules_completed AS modules_remaining
FROM modules;

--  Step 3. Now, let’s look at this data in a different way. Instead of asking how many modules are left, let’s find the fraction of completed modules. To do this, we’ll divide the completed modules by how many were assigned.

--  Before you run the following query, add an alias to name the new column "fraction_completed” (you won’t use the quotation marks). In other words, use AS to name the column like in Step 2. When you’re done, run the query.

SELECT *
, modules_completed / modules_assigned
FROM modules;

--  Step 4. A very common calculation is converting fractions to percentages. We’ll copy our equation from before that gave us the fraction (modules_completed / modules_assigned) and multiply it by 100. 

--  Before you run this query, assign an alias that names the new column “percent”.

SELECT *
, (modules_completed / modules_assigned)*100
FROM modules;

--  Now that we've seen some basic calculations, return to the lesson to learn about rounding. But don’t close this db-fiddle yet, we’ll be back for more one query!

-- Step 5. ROUND() to different places. Below I’ve written a query that shows the percent column we made in step 4, along with different ROUND() clauses.

SELECT
name
, (modules_completed / modules_assigned)*100 AS percent
, ROUND((modules_completed / modules_assigned)*100, 3) AS 'ROUND(percent ,3)'
, ROUND((modules_completed / modules_assigned)*100, 2) AS 'ROUND(percent ,2)'
, ROUND((modules_completed / modules_assigned)*100, 1) AS 'ROUND(percent ,1)'
, ROUND((modules_completed / modules_assigned)*100) AS 'ROUND(percent)'
FROM modules
;
-- As you can see, we can determine the number of decimal places in our result by writing that number after the value (or column) we’re rounding: ROUND(number, decimal places)

-- For example, to round 93.75 to one decimal place, you would write ROUND(93.75, 1), resulting in 93.8. the default decimal place value in ROUND() is 0, so if you just use ROUND(93.75), it will round to an integer (0 places after the decimal): 94.
